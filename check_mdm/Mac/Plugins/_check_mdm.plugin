#!/usr/bin/python
import os
import sys
import platform
import subprocess
from PluginToolkit import writePlist
from PluginToolkit import check_settings
from distutils.version import LooseVersion


# read preferences to know how to alert if there's a problem
settings_plist = '/Library/MonitoringClient/PluginSupport/_check_mdm_settings.plist'
base_settings = {
    'mdm_warning' : 0,
    'uamdm_warning': 1,
    'PrefPaneVisibility' : True,
}
settings = check_settings(base_settings, settings_plist)
writePlist(settings, settings_plist)

# setup exit alerting variables
# 0 == None, Alert on website, no email
# 1 == Warn, Emails once a day, can be muted
# 2 == Alert, Email everytime the plugin is run, no mute
if settings['mdm_warning'] == 0:
    # none
    mdm_warn_level = 20
elif settings['mdm_warning'] == 1:
    # warn
    mdm_warn_level = 2
else:
    # alert
    mdm_warn_level = 200

if settings['uamdm_warning'] == 0:
    uamdm_warn_level = 20
elif settings['uamdm_warning'] == 1:
    uamdm_warn_level = 2
else:
    uamdm_warn_level = 200


# get macOS version
mac_os = platform.mac_ver()[0]
# check if this machine supports UAMDM
uamdm = LooseVersion(mac_os) >= LooseVersion('10.13.4')


def termy(cmd):
    task = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    out, err = task.communicate()
    return(out, err)

def check_uamdm():
    # only works on 10.13.4+
    # checks if enrolled in MDM and if the user has approved it
    out, err = termy([
        '/usr/bin/profiles', 'status',
        '-type', 'enrollment'
    ])
    
    if 'User Approved' in out:
        # user has approved the MDM enrollment
        return(True)
    else:
        # user has not approved the MDM enrollment
        return(False)


# get list of profiles
out, err = termy([
    '/usr/bin/profiles', '-C', '-v'
])

# break lines into a list
data = out.split('\n')

# setup variables
mdm_approval = False
mdm_installed = False

# iterate through the profile data to search for an MDM profile and vendor
for line in data:
    if 'attribute: organization:' in line:
        if '=' in line:
            # grab MDM org based on = separator
            org = line.split('=')[-1].strip()
        else:
            # grab MDM org based on : separator
            org = line.split(':')[-1].strip()
    if 'com.apple.mdm' in line:
        # found an MDM profile!
        mdm_installed = True
        mdm_vendor = org
        
        if uamdm:
            mdm_approval = check_uamdm()
            if mdm_approval:
                print("MDM is installed and approved.")
            else:
                print("MDM is installed and NOT approved.")
        else:
            # for pre-UAMDM macOS, a generic MDM is installed
            print("MDM is installed.")
        print("MDM Vendor: {0}".format(mdm_vendor))


if mdm_installed:
    # MDM is installed
    if uamdm:
        # user approved MDM is required
        if mdm_approval:
            # MDM has been approved
            sys.exit(0)
        else:
            # MDM isn't approved
            sys.exit(uamdm_warn_level)
    else:
        # user approved MDM isn't required
        sys.exit(0)
else:
    # MDM isn't installed
    print("MDM not installed.")
    sys.exit(mdm_warn_level)
